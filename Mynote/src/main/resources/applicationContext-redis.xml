<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 只要掌握Jedis,JedisPool,JedisPoolConfig,JedisSharedInfo,ShardedJedisPool,ShardedJedis这几个类基本上能满足基本的使用 -->
	
	<context:annotation-config />
	
	<bean id="propertyConfigurerRedis" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="order" value="1" />  
        <property name="ignoreUnresolvablePlaceholders" value="true" />  
        <property name="locations">  
            <list>  
                <value>classpath:redis.properties</value>  
            </list>  
        </property>  
    </bean>
    
	<!-- Jedis ConnectionFactory -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}" /><!--最大连接数-->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />  <!--最大空闲数-->
		<property name="maxWait" value="${redis.pool.maxWait}" />  <!--最大等待时间ms-->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	
	<!-- 单节点 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.hostname}" />
		<property name="port" value="${redis.port}" />
		<!-- <property name="password" value="${redis.password}" /> -->
		<property name="timeout" value="${redis.timeout}" />  
        <property name="database" value="${redis.default.db}"/>
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	<!-- 模板类 -->
	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory">
	</bean>
	<!-- 操作类 -->
	<bean id="userDao" class="com.mywiki.util.redis.UserDaoImpl">
		<property name="redisTemplate">
			<ref bean="jedisTemplate" />
		</property>
	</bean>	
	<!-- <bean id="radisExample" class="com.mywiki.util.redis.RedisExample">
		<property name="template">
			<ref bean="jedisTemplate" />
		</property>
	</bean> -->
	
	
	
	<!-- jedis 多个服务器配置-->  
	<bean id="jedisShardInfo1" class="redis.clients.jedis.JedisShardInfo">    
	    <constructor-arg index="0" value="${redis1.ip}" />    
	    <constructor-arg index="1" value="${redis.port}" type="int" />    
	</bean>     
	<bean id="jedisShardInfo2" class="redis.clients.jedis.JedisShardInfo">    
	    <constructor-arg index="0" value="${redis2.ip}" />    
	    <constructor-arg index="1" value="${redis.port}" type="int" />    
	</bean>
	  
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">    
	    <constructor-arg index="0" ref="jedisPoolConfig" />    
	    <constructor-arg index="1">  
	        <list>  
	            <ref bean="jedisShardInfo1" />  
	            <ref bean="jedisShardInfo2"/>
	        </list>  
	    </constructor-arg>    
	</bean>
</beans>
